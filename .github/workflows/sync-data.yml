name: Sync Bot Data

on:
  schedule:
    # Run every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch: {} # Allow manual trigger
  
  # Also run when the main repo pushes new data
  repository_dispatch:
    types: [data_updated]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout website repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout bot repo
        uses: actions/checkout@v4
        with:
          repository: bocchi-the-crypto/crypto-dca-bot  # Replace with actual repo
          path: bot-repo
          # If the bot repo is private, add:
          # token: ${{ secrets.BOT_REPO_TOKEN }}

      - name: Ensure data directory
        run: mkdir -p public/data

      - name: Copy data files
        run: |
          shopt -s nullglob
          for f in positions_current.json snapshots.ndjson prices.ndjson transactions.ndjson; do
            if [[ -f "bot-repo/data/$f" ]]; then
              cp -f "bot-repo/data/$f" "public/data/$f"
              echo "Copied $f ($(wc -l < "public/data/$f") lines)"
            else
              echo "File $f not found in bot repo"
            fi
          done
          
      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet public/data; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/data
          git commit -m "chore(data): sync from bot repo - $(date -u +"%Y-%m-%d %H:%M UTC")"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger deployment
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-pages.yml/dispatches" \
            -d '{"ref":"main"}'